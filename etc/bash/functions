function docker-use {
    eval "$(docker-machine env $1)"
}

# Setup paths
pathremove() {
  ABSPATH=`cd $ABSPATH | pwd`
  if [ -d "$ABSPATH" ]; then
    export PATH=${PATH//":$ABSPATH:"/} #delete all instances in the middle
    export PATH=${PATH/%":$ABSPATH"/} #delete any instance at the end
    export PATH=${PATH/#"$ABSPATH:"/} #delete any instance at the beginning
  fi
}

pathprepend() {
  ABSPATH=`cd $ABSPATH | pwd`
  [ -d $ABSPATH ] || return
  pathremove "$ABSPATH"
  export PATH="$ABSPATH:$PATH"
}

pathappend() {
  ABSPATH=`cd $1 | pwd`
  [ -d "$ABSPATH" ] || return
  pathremove "$ABSPATH"
  export PATH="$PATH:$ABSPATH"
}

addpath() {
  ABSPATH=`cd $1 | pwd`
  pathremove "$ABSPATH"
  export PATH="$ABSPATH:$PATH"
}

removepath() {
  ABSPATH=`cd $1 | pwd`
  pathremove "$ABSPATH"
}

tz(){
  tar cf - $1 | gzip > $(basename $1).tar.gz
}

bak(){
  cp $1 $1.$(date +%Y%m%d%H%M%S)
}

#ex     : Extract files from any archive
ex(){
  if [ -f $1 ] ; then
    case $1 in
      *.tar.bz2) tar xjf $1
        ;;
      *.tar.gz) tar xzf $1
        ;;
      *.bz2) bunzip2 $1
        ;;
      *.rar) rar x $1
        ;;
      *.gz) gunzip $1
        ;;
      *.tar) tar xf $1
        ;;
      *.tbz2) tar xjf $1
        ;;
      *.tgz) tar xzf $1
        ;;
      *.zip) unzip $1
        ;;
      *.Z) uncompress $1
        ;;
      *.7z) 7z x $1
        ;;
      *) echo "'$1' cannot be extracted via extract()"
        ;;
    esac
  else
    echo "'$1' is not a valid file"
  fi
}

#cd to the directory of arg
cdd(){
  cd $(dirname "$@")
}

function mcd {
  mkdir -p "$1" && cd "$1"
}

function cdup() {
    ups=""
    for i in $(seq 1 $1)
    do
      ups=$ups"../"
    done
    cd $ups
}

