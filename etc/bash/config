
# echo "${BASH_SOURCE[0]}"
export DOTFILES=$( cd "$( dirname "${BASH_SOURCE[0]}" )"/../.. && pwd )

export PATH="~/usr/bin:~/.local/bin:~/bin:$DOTFILES/bin:/usr/local/bin:$PATH"

# OS variables
[ $(uname -s) = "Darwin" ] && export OSX=1 && export UNIX=1
[ $(uname -s) = "Linux" ] && export LINUX=1 && export UNIX=1
uname -s | grep -q "_NT-" && export WINDOWS=1

# Fix systems missing $USER
[ -z "$USER" ] && export USER=$(whoami)

if [ $OSX ]; then
    source $DOTFILES/etc/bash/mac
elif [ $LINUX ]; then
    source $DOTFILES/etc/bash/linux
elif [ $WINDOWS ]; then
    source $DOTFILES/etc/bash/mingw
fi

# Count CPUs for Make jobs
if [ $OSX ]
then
  export CPUCOUNT=$(sysctl -n hw.ncpu)
elif [ $LINUX ]
then
  export CPUCOUNT=$(nproc)
else
  export CPUCOUNT="1"
fi

# colored GCC warnings and errors
export GCC_COLORS='error=01;31:warning=01;35:note=01;36:caret=01;32:locus=01:quote=01'

# pip bash completion start
_pip_completion()
{
    COMPREPLY=( $( COMP_WORDS="${COMP_WORDS[*]}" \
                   COMP_CWORD=$COMP_CWORD \
                   PIP_AUTO_COMPLETE=1 $1 ) )
}
complete -o default -F _pip_completion pip
# pip bash completion end

alias cpm='cget -p /usr/local'

# TODO: Make this a script
alias fig='docker-compose -f fig.yml'

# alias vg='valgrind --track-origins=yes --read-var-info=yes --expensive-definedness-checks=yes --read-inline-info=yes'
alias vg='valgrind --track-origins=yes --read-var-info=yes --read-inline-info=yes'

alias m="CTEST_PARALLEL_LEVEL=${CPUCOUNT} make -j${CPUCOUNT}"

# Pretty print the path
alias path='echo $PATH | tr -s ":" "\n"'

# URL-encode strings
alias urlencode='python -c "import sys, urllib as ul; print ul.quote_plus(sys.argv[1]);"'

function cppcheck-all {
    cppcheck --enable=all --force --template "{file}({line}): {severity} ({id}): {message}" --suppress='noExplicitConstructor' `find -regex '.*/.*\.\(c\|cpp\|h\|hpp\|cl\)$'`
}

if type -p subl > /dev/null ; then
    export EDITOR='subl -w'
    export EDITOR_FILE="subl"
    export EDITOR_DIR="subl -n"
elif type -p nano > /dev/null ; then
    export EDITOR=nano
    export EDITOR_FILE=nano
    export EDITOR_DIR=ls
fi

# Always use nano for crontab
alias crontab='EDITOR=nano crontab'

function e {
    if [ "$1" = "" ] ; then
        $EDITOR_DIR .
    elif [ -d "$1" ] ; then
        $EDITOR_DIR "$1"
    else
        $EDITOR_FILE "$1"
    fi
}

source $DOTFILES/etc/bash/colors
source $DOTFILES/etc/bash/functions

[[ $- == *i* ]] && source $DOTFILES/etc/bash/prompt
[[ $- == *i* ]] && PS1="\[$BIGreen\]$PROMPT_HOST:$PROMPT_USER\[$Green\][$PROMPT_TIME]\n\[$Blue\]$PROMPT_CURRENT_WORKING_DIR \[$Yellow\]$PROMPT_BRANCH\[$Color_Off\]$ "
[[ $- == *i* ]] && PS2='\[\033[01;36m\]>'
